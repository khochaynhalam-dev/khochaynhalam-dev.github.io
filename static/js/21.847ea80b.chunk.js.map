{"version":3,"sources":["pages/product/list/columns.js","pages/product/list/Table.js","pages/product/list/index.js","components/Buttons/AddNewButton/index.js","components/Dropdowns/DropdownCreateAt/index.js","components/Pagination/Pagination.js"],"names":["statusObj","pending","active","inactive","columns","name","minWidth","maxWidth","selector","sortable","cell","row","color","Math","floor","random","product_images","length","className","src","thumb_url","width","height","content","initials","renderClient","to","id","onClick","store","dispatch","getProduct","brand","category","center","product_variants","buy_items","Badge","status","pill","UncontrolledDropdown","DropdownToggle","tag","size","DropdownMenu","right","DropdownItem","Link","deleteProduct","statusOptions","value","label","number","ProductHeader","props","categoryOptions","currentCategory","setCurrentCategory","rowsPerPage","handleFilter","searchTerm","currentStatus","setCurrentStatus","currentPage","Row","Col","md","InputGroup","Input","placeholder","onChange","e","target","InputGroupAddon","addonType","InputGroupText","isClearable","theme","selectThemeColors","classNamePrefix","options","data","getProducts","page","perPage","q","getWardrobes","DropdownCreateAt","handleSelectOption","ProductsList","useDispatch","useSelector","state","products","useState","isLoaded","setLoaded","setSearchTerm","setCurrentPage","setRowsPerPage","useEffect","getCategories","categories","handlePagination","selected","AddNewButton","text","link","Card","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","Pagination","filters","isFiltered","Object","keys","some","k","dataToRender","subHeaderComponent","handlePerPage","parseInt","currentTarget","val","ProductList","Table","Index","style","marginRight","dateOptions","totalItemPage","totalRecords","total","count","Number","ceil","for","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName"],"mappings":"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","file":"static/js/21.847ea80b.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/storeConfig/store'\r\n\r\n// ** Third Party Components\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport {Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2} from 'react-feather'\r\nimport {deleteProduct, getProduct} from \"../store/action\"\r\nimport React from \"react\"\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row?.product_images?.length > 0) {\r\n    return <img className='mr-1' src={row.product_images[0].thumb_url} width='50' height='50' />\r\n  } else {\r\n    return <img color={color || 'primary'} className='mr-1' content={row.name || 'John Doe'} initials />\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} mr-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Hình ảnh',\r\n    minWidth: '40px',\r\n    maxWidth: '130px',\r\n    selector: 'fullName',\r\n    sortable: true,\r\n    cell: row => renderClient(row)\r\n  },\r\n  {\r\n    name: 'Sản phẩm',\r\n    minWidth: '400px',\r\n    selector: 'name',\r\n    sortable: true,\r\n    cell: row => (\r\n        <div className='d-flex justify-content-left align-items-center'>\r\n          <div className='d-flex flex-column'>\r\n            <Link\r\n                to={`/product/detail/${row.id}`}\r\n                className='user-name text-truncate mb-0'\r\n                onClick={() => store.dispatch(getProduct(row.id))}>\r\n              <span className='font-weight-bold'>{row.name}</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Nhãn hiệu',\r\n    minWidth: '150px',\r\n    selector: 'brand',\r\n    sortable: true,\r\n    cell: row => row?.brand\r\n  },\r\n  {\r\n    name: 'Nhóm sản phẩm',\r\n    minWidth: '150px',\r\n    selector: 'category',\r\n    sortable: true,\r\n    cell: row => row?.category\r\n  },\r\n  {\r\n    name: 'Phiên bản',\r\n    minWidth: '150px',\r\n    selector: 'email',\r\n    center: 'true',\r\n    cell: row => row?.product_variants?.length\r\n  },\r\n  {\r\n    name: 'Số lượng đã bán',\r\n    minWidth: '172px',\r\n    selector: 'role',\r\n    sortable: true,\r\n    cell: row => row?.buy_items\r\n  },\r\n  {\r\n    name: 'Trạng thái',\r\n    minWidth: '138px',\r\n    selector: 'status',\r\n    sortable: true,\r\n    center: 'true',\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status === 'active' ? 'Đang sử dụng' : 'Ngưng sử dụng'}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Hành động',\r\n    minWidth: '100px',\r\n    maxWidth: '138px',\r\n    cell: row => (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle tag='div' className='btn btn-sm'>\r\n          <MoreVertical size={14} className='cursor-pointer' />\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem\r\n            tag={Link}\r\n            to={`/product/detail/${row.id}`}\r\n            className='w-100'\r\n            onClick={() => store.dispatch(getProduct(row.id))}\r\n          >\r\n            <FileText size={14} className='mr-50' />\r\n            <span className='align-middle'>Chỉnh sửa</span>\r\n          </DropdownItem>\r\n          <DropdownItem className='w-100' onClick={() => store.dispatch(deleteProduct(row.id))}>\r\n            <Trash2 size={14} className='mr-50' />\r\n            <span className='align-middle'>Xóa</span>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport React, { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getCategories, getProducts} from \"../store/action\"\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport {ChevronDown, PlusCircle, Search} from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { selectThemeColors } from '@utils'\r\nimport {\r\n    Card,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport {getWardrobes} from \"../../wardrobe/store/action\"\r\nimport DropdownCreateAt from \"../../../components/Dropdowns/DropdownCreateAt\"\r\nimport Pagination from \"../../../components/Pagination/Pagination\"\r\nimport AddNewButton from \"../../../components/Buttons/AddNewButton\"\r\n\r\nconst statusOptions = [\r\n    { value: '', label: 'Trạng thái', number: 0 },\r\n    { value: 'active', label: 'Đang sử dụng', number: 2 },\r\n    { value: 'inactive', label: 'Ngưng sử dụng', number: 3 }\r\n]\r\n\r\n// ** Table Header\r\nconst ProductHeader = props => {\r\n  const { categoryOptions, currentCategory, setCurrentCategory, rowsPerPage, handleFilter, searchTerm, currentStatus, setCurrentStatus, currentPage, dispatch } = props\r\n  return (\r\n    <div className='invoice-list-table-header w-100 mr-1 mt-2 mb-2'>\r\n      <Row>\r\n          <Col md='6' className='d-flex align-items-center p-0'>\r\n              <InputGroup className='ml-1 w-50 input-group-merge'>\r\n                  <Input placeholder='Tìm kiếm theo tên sản phẩm...' value={searchTerm} onChange={e => handleFilter(e.target.value)}/>\r\n                  <InputGroupAddon addonType='append'>\r\n                      <InputGroupText>\r\n                          <Search size={14} />\r\n                      </InputGroupText>\r\n                  </InputGroupAddon>\r\n              </InputGroup>\r\n          </Col>\r\n          <Col\r\n              md='6'\r\n              className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column p-0 mt-lg-0 mt-1'>\r\n              <Select\r\n                  isClearable={false}\r\n                  theme={selectThemeColors}\r\n                  className='react-select w-25 pl-50 pr-50'\r\n                  classNamePrefix='select'\r\n                  options={categoryOptions}\r\n                  value={currentCategory}\r\n                  onChange={data => {\r\n                      setCurrentCategory(data)\r\n                      dispatch(\r\n                          getProducts({\r\n                              page: currentPage,\r\n                              perPage: rowsPerPage,\r\n                              category: data.value,\r\n                              status: currentStatus.value,\r\n                              q: searchTerm\r\n                          })\r\n                      )\r\n                  }}\r\n              />\r\n              <Select\r\n                  theme={selectThemeColors}\r\n                  isClearable={false}\r\n                  className='react-select w-25 pl-50 pr-50'\r\n                  classNamePrefix='select'\r\n                  options={statusOptions}\r\n                  value={currentStatus}\r\n                  onChange={data => {\r\n                      setCurrentStatus(data)\r\n                      dispatch(\r\n                          getWardrobes({\r\n                              page: currentPage,\r\n                              perPage: rowsPerPage,\r\n                              status: data.value,\r\n                              q: searchTerm\r\n                          })\r\n                      )\r\n                  }}\r\n              />\r\n              <DropdownCreateAt handleSelectOption={() => {}}/>\r\n          </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProductsList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.products)\r\n  const [isLoaded, setLoaded] = useState(false)\r\n  // ** States\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [currentCategory, setCurrentCategory] = useState({ value: '', label: 'Nhóm sản phẩm' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Trạng thái', number: 0 })\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n      if (!isLoaded) {\r\n          setLoaded(true)\r\n          dispatch(\r\n              getProducts({\r\n                  page: currentPage,\r\n                  perPage: rowsPerPage,\r\n                  category: currentCategory.value,\r\n                  status: currentStatus.value,\r\n                  q: searchTerm\r\n              })\r\n          )\r\n          dispatch(getCategories())\r\n      }\r\n  }, [dispatch, store.products.length])\r\n\r\n  // ** User filter options\r\n  const categoryOptions = store.categories\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n        getProducts({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        category: currentCategory.value,\r\n        status: currentStatus.value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n        getProducts({\r\n        page: currentPage,\r\n        perPage: value,\r\n        category: currentCategory.value,\r\n        status: currentStatus.value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n        getProducts({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        category: currentCategory.value,\r\n        status: currentStatus.value,\r\n        q: val\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const ProductPagination = () => {\r\n      return (\r\n          <Pagination\r\n              handlePagination={handlePagination}\r\n              currentPage={currentPage}\r\n              rowsPerPage={rowsPerPage}\r\n              store={store}\r\n          />\r\n      )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      category: currentCategory.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.products.length > 0) {\r\n      return store.products\r\n    } else if (store.products.length === 0 && isFiltered) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <AddNewButton text={'Tạo mới sản phẩm'} link={'/product/create'}/>\r\n      <Card>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          subHeader\r\n          responsive\r\n          paginationServer\r\n          columns={columns}\r\n          sortIcon={<ChevronDown />}\r\n          className='react-dataTable'\r\n          paginationComponent={ProductPagination}\r\n          data={dataToRender()}\r\n          subHeaderComponent={\r\n            <ProductHeader\r\n              handlePerPage={handlePerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              searchTerm={searchTerm}\r\n              handleFilter={handleFilter}\r\n              currentStatus={currentStatus}\r\n              setCurrentStatus={setCurrentStatus}\r\n              currentPage={currentPage}\r\n              dispatch={dispatch}\r\n              categoryOptions={categoryOptions}\r\n              currentCategory={currentCategory}\r\n              setCurrentCategory={setCurrentCategory}\r\n            />\r\n          }\r\n        />\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ProductsList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst ProductList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductList\r\n","import {Col, Row} from \"reactstrap\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {PlusCircle} from \"react-feather\"\r\nimport React from \"react\"\r\n\r\nconst Index = ({text, link}) => {\r\n    return (\r\n        <Row className='d-flex align-items-center justify-content-end w-100 pb-1 m-0'>\r\n            <Col md={2} className='d-flex align-items-center justify-content-end p-0'>\r\n                <Link className={'btn btn-primary white-space-nowrap'} to={link}><PlusCircle color={'white'} size={18} style={{marginRight: '10px'}}/> {text}</Link>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default Index","import React from \"react\"\r\nimport './styles/dropdown_create_at.scss'\r\nimport Select from \"react-select\"\r\nimport { selectThemeColors } from '@utils'\r\n\r\nconst dateOptions = [\r\n    {\r\n        value: 'today', label: 'Hôm nay'\r\n    },\r\n    {\r\n        value: 'yesterday', label: 'Hôm qua'\r\n    },\r\n    {\r\n        value: 'thisWeek', label: 'Tuần này'\r\n    },\r\n    {\r\n        value: 'lastWeek', label: 'Tuần trước'\r\n    },\r\n    {\r\n        value: 'thisMonth', label: 'Tháng này'\r\n    },\r\n    {\r\n        value: 'lastMonth', label: 'Tháng trước'\r\n    }\r\n]\r\n\r\nconst Index = props => {\r\n    const {handleSelectOption} = props\r\n\r\n    return (\r\n        <Select\r\n            theme={selectThemeColors}\r\n            isClearable={false}\r\n            className='react-select select-create-at pl-50'\r\n            classNamePrefix='select'\r\n            options={dateOptions}\r\n            placeholder={'Ngày tạo'}\r\n            onChange={data => {\r\n                handleSelectOption(data)\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Index","import {Label} from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport React from \"react\"\r\n\r\nconst Pagination = props => {\r\n    const {handlePagination, currentPage, rowsPerPage, store} = props\r\n    const totalItemPage = () => {\r\n        const totalRecords = store.total\r\n        if ((totalRecords - (currentPage + rowsPerPage)) < 0) {\r\n            return totalRecords\r\n        } else return currentPage * rowsPerPage\r\n    }\r\n\r\n    const indexStartItem = () => {\r\n        if (totalItemPage() - rowsPerPage + 1 < 0) {\r\n            return 1\r\n        } else return totalItemPage() - rowsPerPage + 1\r\n    }\r\n\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n        <div className='d-flex align-items-center justify-content-between ml-2'>\r\n            <div className='d-flex align-items-center w-100'>\r\n                <Label for='rows-per-page'>Hiển thị từ {indexStartItem()} - {totalItemPage()}/{store.total}</Label>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={''}\r\n                nextLabel={''}\r\n                pageCount={count || 1}\r\n                activeClassName='active'\r\n                forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n                onPageChange={page => handlePagination(page)}\r\n                pageClassName={'page-item'}\r\n                nextLinkClassName={'page-link'}\r\n                nextClassName={'page-item next'}\r\n                previousClassName={'page-item prev'}\r\n                previousLinkClassName={'page-link'}\r\n                pageLinkClassName={'page-link'}\r\n                containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination"],"sourceRoot":""}