{"version":3,"sources":["pages/customer/list/columns.js","pages/customer/list/Table.js","pages/customer/list/index.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js"],"names":["renderClient","row","color","Math","floor","random","avatar","length","className","img","width","height","content","fullName","initials","statusObj","pending","active","inactive","columns","name","minWidth","selector","sortable","cell","to","id","onClick","store","dispatch","getCustomer","email","phone","Badge","status","pill","UncontrolledDropdown","DropdownToggle","tag","size","DropdownMenu","right","DropdownItem","Link","blockCustomer","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","Row","Col","xl","Label","for","CustomInput","type","value","onChange","style","padding","backgroundPosition","Input","e","target","CustomersList","useDispatch","useSelector","state","customers","useState","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","label","currentRole","setCurrentRole","currentPlan","setCurrentPlan","number","currentStatus","setCurrentStatus","useEffect","getCustomers","page","perPage","role","q","Card","CardHeader","CardTitle","CardBody","md","isClearable","theme","selectThemeColors","classNamePrefix","options","data","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","count","Number","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","Object","keys","some","k","dataToRender","subHeaderComponent","parseInt","currentTarget","val","CustomerList","Table","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","innerRef","oneOfType","func","ref"],"mappings":"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","file":"static/js/25.474d4fb8.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/storeConfig/store'\r\n\r\n// ** Third Party Components\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\nimport {blockCustomer, getCustomer} from \"../store/action\"\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row?.avatar?.length) {\r\n    return <Avatar className='mr-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return <Avatar color={color || 'primary'} className='mr-1' content={row.fullName || 'John Doe'} initials />\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} mr-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Thông tin khách hàng',\r\n    minWidth: '297px',\r\n    selector: 'fullName',\r\n    sortable: true,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/customer/detail/${row.id}`}\r\n            className='user-name text-truncate mb-0'\r\n            onClick={() => store.dispatch(getCustomer(row.id))}\r\n          >\r\n            <span className='font-weight-bold'>{row.name}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>@{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Email',\r\n    minWidth: '320px',\r\n    selector: 'email',\r\n    sortable: true,\r\n    cell: row => row.email\r\n  },\r\n  {\r\n    name: 'Số điện thoại',\r\n    minWidth: '172px',\r\n    selector: 'phone',\r\n    sortable: true,\r\n    cell: row => row.phone\r\n  },\r\n  {\r\n    name: 'Số lượng đơn hàng',\r\n    minWidth: '138px',\r\n    selector: 'currentPlan',\r\n    sortable: true,\r\n    cell: row => <span className='text-capitalize'>0</span>\r\n  },\r\n  {\r\n    name: 'Trạng thái',\r\n    minWidth: '138px',\r\n    selector: 'status',\r\n    sortable: true,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status === 'ACTIVE' ? 'Hoạt động' : 'Chưa hoạt động'}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Hành động',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle tag='div' className='btn btn-sm'>\r\n          <MoreVertical size={14} className='cursor-pointer' />\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem\r\n            tag={Link}\r\n            to={`/customer/detail/${row.id}`}\r\n            className='w-100'\r\n            onClick={() => store.dispatch(getCustomer(row.id))}>\r\n            <FileText size={14} className='mr-50' />\r\n            <span className='align-middle'>Details</span>\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            tag={Link}\r\n            to={`/customer/edit/${row.id}`}\r\n            className='w-100'\r\n            onClick={() => store.dispatch(getCustomer(row.id))}>\r\n            <Archive size={14} className='mr-50' />\r\n            <span className='align-middle'>Edit</span>\r\n          </DropdownItem>\r\n          <DropdownItem className='w-100' onClick={() => store.dispatch(blockCustomer(row.id))}>\r\n            <Trash2 size={14} className='mr-50' />\r\n            <span className='align-middle'>Delete</span>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCustomers } from \"../store/action\"\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { ChevronDown } from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { selectThemeColors } from '@utils'\r\nimport { Card, CardHeader, CardTitle, CardBody, Input, Row, Col, Label, CustomInput } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({ handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\r\n  return (\r\n    <div className='invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75'>\r\n      <Row>\r\n        <Col xl='6' className='d-flex align-items-center p-0'>\r\n          <div className='d-flex align-items-center w-100'>\r\n            <Label for='rows-per-page'>Show</Label>\r\n            <CustomInput\r\n              className='form-control mx-50'\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{\r\n                width: '5rem',\r\n                padding: '0 0.8rem',\r\n                backgroundPosition: 'calc(100% - 3px) 11px, calc(100% - 20px) 13px, 100% 0'\r\n              }}\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </CustomInput>\r\n            <Label for='rows-per-page'>Entries</Label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='6'\r\n          className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1'>\r\n          <div className='d-flex align-items-center mb-sm-0 mb-1 mr-1'>\r\n            <Label className='mb-0' for='search-invoice'>\r\n              Search:\r\n            </Label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ml-50 w-100'\r\n              type='text'\r\n              value={searchTerm}\r\n              onChange={e => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CustomersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.customers)\r\n\r\n  // ** States\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(\r\n        getCustomers({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n  }, [dispatch, store.customers.length])\r\n\r\n  // ** User filter options\r\n  const roleOptions = [\r\n    { value: '', label: 'Select Role' },\r\n    { value: 'admin', label: 'Admin' },\r\n    { value: 'author', label: 'Author' },\r\n    { value: 'editor', label: 'Editor' },\r\n    { value: 'maintainer', label: 'Maintainer' },\r\n    { value: 'subscriber', label: 'Subscriber' }\r\n  ]\r\n\r\n  const planOptions = [\r\n    { value: '', label: 'Select Plan' },\r\n    { value: 'basic', label: 'Basic' },\r\n    { value: 'company', label: 'Company' },\r\n    { value: 'enterprise', label: 'Enterprise' },\r\n    { value: 'team', label: 'Team' }\r\n  ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'pending', label: 'Pending', number: 1 },\r\n    { value: 'active', label: 'Active', number: 2 },\r\n    { value: 'inactive', label: 'Inactive', number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n        getCustomers({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n        getCustomers({\r\n        page: currentPage,\r\n        perPage: value,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n        getCustomers({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value,\r\n        q: val\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.customers.length > 0) {\r\n      return store.customers\r\n    } else if (store.customers.length === 0 && isFiltered) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Search Filter</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md='4'>\r\n              <Select\r\n                isClearable={false}\r\n                theme={selectThemeColors}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={roleOptions}\r\n                value={currentRole}\r\n                onChange={data => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                      getCustomers({\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: data.value,\r\n                      currentPlan: currentPlan.value,\r\n                      status: currentStatus.value,\r\n                      q: searchTerm\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className='my-md-0 my-1' md='4'>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={planOptions}\r\n                value={currentPlan}\r\n                onChange={data => {\r\n                  setCurrentPlan(data)\r\n                  dispatch(\r\n                      getCustomers({\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: data.value,\r\n                      status: currentStatus.value,\r\n                      q: searchTerm\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md='4'>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={data => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                      getCustomers({\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: currentPlan.value,\r\n                      status: data.value,\r\n                      q: searchTerm\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card>\r\n        <DataTable\r\n          noHeader\r\n          pagination\r\n          subHeader\r\n          responsive\r\n          paginationServer\r\n          columns={columns}\r\n          sortIcon={<ChevronDown />}\r\n          className='react-dataTable'\r\n          paginationComponent={CustomPagination}\r\n          data={dataToRender()}\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              handlePerPage={handlePerPage}\r\n              rowsPerPage={rowsPerPage}\r\n              searchTerm={searchTerm}\r\n              handleFilter={handleFilter}\r\n            />\r\n          }\r\n        />\r\n      </Card>\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CustomersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst CustomerList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomerList\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;"],"sourceRoot":""}