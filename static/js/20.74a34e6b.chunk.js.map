{"version":3,"sources":["pages/wardrobe/list/columns.js","assets/images/imgs/im_wardrobe_empty.png","pages/wardrobe/list/Table.js","pages/wardrobe/list/index.js","components/Buttons/AddNewButton/index.js","components/Dropdowns/DropdownCreateAt/index.js","components/Pagination/Pagination.js"],"names":["statusObj","pending","null","inactive","columns","name","minWidth","maxWidth","selector","sortable","cell","row","color","Math","floor","random","image_url_thumb","className","src","width","height","content","renderImage","to","id","onClick","store","dispatch","getWardrobe","wardrobe_details","length","createdAt","Badge","deleted_at","pill","UncontrolledDropdown","DropdownToggle","tag","size","DropdownMenu","right","DropdownItem","Link","deleteWardrobe","statusOptions","value","label","number","ProductHeader","setCurrentStatus","currentStatus","currentPage","rowsPerPage","handleFilter","searchTerm","Row","Col","md","InputGroup","Input","placeholder","onChange","e","target","InputGroupAddon","addonType","InputGroupText","theme","selectThemeColors","isClearable","classNamePrefix","options","data","getWardrobes","page","perPage","status","q","DropdownCreateAt","handleSelectOption","ProductsList","useDispatch","useSelector","state","wardrobes","useState","isloaded","setLoaded","setSearchTerm","setCurrentPage","useEffect","handlePagination","selected","AddNewButton","text","link","Card","noHeader","pagination","subHeader","responsive","paginationServer","sortIcon","paginationComponent","Pagination","filters","isFiltered","Object","keys","some","k","dataToRender","subHeaderComponent","val","im_Empty","alt","WardrobeList","Table","Index","style","marginRight","dateOptions","props","totalItemPage","totalRecords","total","count","Number","ceil","for","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName"],"mappings":"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","file":"static/js/20.74a34e6b.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/storeConfig/store'\r\n\r\n// ** Third Party Components\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, CustomInput } from 'reactstrap'\r\nimport {Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, Image} from 'react-feather'\r\nimport {deleteWardrobe, getWardrobe, getWardrobes} from \"../store/action\"\r\nimport React from \"react\"\r\n\r\n// ** Renders Client Columns\r\nconst renderImage = row => {\r\n  const stateNum = Math.floor(Math.random() * 6),\r\n    states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\r\n    color = states[stateNum]\r\n\r\n  if (row?.image_url_thumb) {\r\n    return <img className='mr-1' src={row.image_url_thumb} width='50' height='50' />\r\n  } else {\r\n    return <img color={color || 'primary'} className='mr-1' content={row.name} />\r\n  }\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  null: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'Hình ảnh',\r\n    minWidth: '40px',\r\n    maxWidth: '130px',\r\n    selector: 'fullName',\r\n    sortable: true,\r\n    cell: row => renderImage(row)\r\n  },\r\n  {\r\n    name: 'Bộ sưu tập',\r\n    minWidth: '300px',\r\n    selector: 'name',\r\n    sortable: true,\r\n    cell: row => (\r\n        <div className='d-flex justify-content-left align-items-center'>\r\n          <div className='d-flex flex-column'>\r\n            <Link\r\n                to={`/wardrobe/detail/${row.id}`}\r\n                className='user-name text-truncate mb-0'\r\n                onClick={() => store.dispatch(getWardrobe(row.id))}>\r\n              <span className='font-weight-bold'>{row.name}</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Tổng sản phẩm',\r\n    minWidth: '150px',\r\n    selector: 'category',\r\n    sortable: true,\r\n    cell: row => row?.wardrobe_details?.length\r\n  },\r\n  {\r\n    name: 'Ngày tạo',\r\n    minWidth: '320px',\r\n    selector: 'email',\r\n    sortable: true,\r\n    cell: row => row?.createdAt\r\n  },\r\n  {\r\n    name: 'Trạng thái',\r\n    minWidth: '138px',\r\n    maxWidth: '200px',\r\n    selector: 'status',\r\n    sortable: true,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.deleted_at]} pill>\r\n        {row?.deleted_at === null ? 'Đang sử dụng' : 'Ngưng sử dụng'}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Hành động',\r\n    minWidth: '100px',\r\n    maxWidth: '138px',\r\n    cell: row => (\r\n      <UncontrolledDropdown>\r\n        <DropdownToggle tag='div' className='btn btn-sm'>\r\n          <MoreVertical size={14} className='cursor-pointer' />\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem\r\n            tag={Link}\r\n            to={`/wardrobe/detail/${row.id}`}\r\n            className='w-100'\r\n            onClick={() => store.dispatch(getWardrobe(row.id))}\r\n          >\r\n            <FileText size={14} className='mr-50' />\r\n            <span className='align-middle'>Chỉnh sửa</span>\r\n          </DropdownItem>\r\n          <DropdownItem className='w-100' onClick={() => store.dispatch(deleteWardrobe(row.id))}>\r\n            <Trash2 size={14} className='mr-50' />\r\n            <span className='align-middle'>Xóa</span>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    )\r\n  }\r\n]\r\n","export default __webpack_public_path__ + \"static/media/im_wardrobe_empty.377f3c30.png\";","// ** React Imports\r\nimport React, {Fragment, useState, useEffect, forwardRef} from 'react'\r\n\r\n// ** Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getWardrobes } from \"../store/action\"\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport {ChevronDown, Plus, PlusCircle, Search} from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport { selectThemeColors } from '@utils'\r\nimport  {\r\n    Card,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    InputGroup\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport './styles/wardrobe-list.scss'\r\nimport im_Empty from \"../../../assets/images/imgs/im_wardrobe_empty.png\"\r\nimport DropdownCreateAt from \"../../../components/Dropdowns/DropdownCreateAt\"\r\nimport Pagination from \"../../../components/Pagination/Pagination\"\r\nimport AddNewButton from \"../../../components/Buttons/AddNewButton\"\r\n\r\nconst statusOptions = [\r\n    { value: '', label: 'Trạng thái', number: 0 },\r\n    { value: 'active', label: 'Đang sử dụng', number: 1 },\r\n    { value: 'inactive', label: 'Ngưng sử dụng', number: 2 }\r\n]\r\n\r\n// ** Table Header\r\nconst ProductHeader = ({ dispatch, setCurrentStatus, currentStatus, currentPage, rowsPerPage, handleFilter, searchTerm }) => {\r\n  return (\r\n    <div className='invoice-list-table-header w-100 mr-1 ml-50 mt-2 mb-75'>\r\n      <Row className='d-flex align-items-center justify-content-between'>\r\n        <Col md='6' className='d-flex align-items-center p-0'>\r\n            <InputGroup className='ml-50 w-50 input-group-merge'>\r\n                <Input placeholder='Tìm kiếm theo bộ sưu tập...' value={searchTerm} onChange={e => handleFilter(e.target.value)}/>\r\n                <InputGroupAddon addonType='append'>\r\n                    <InputGroupText>\r\n                        <Search size={14} />\r\n                    </InputGroupText>\r\n                </InputGroupAddon>\r\n            </InputGroup>\r\n        </Col>\r\n        <Col\r\n          md='6'\r\n          className='d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pr-lg-1 p-0 mt-lg-0 mt-1'>\r\n            <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select select-status pl-1 pr-1'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={data => {\r\n                    setCurrentStatus(data)\r\n                    dispatch(\r\n                        getWardrobes({\r\n                            page: currentPage,\r\n                            perPage: rowsPerPage,\r\n                            status: data.value,\r\n                            q: searchTerm\r\n                        })\r\n                    )\r\n                }}\r\n            />\r\n            <DropdownCreateAt handleSelectOption={() => {}}/>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProductsList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.wardrobes)\r\n  const [isloaded, setLoaded] = useState(false)\r\n  // ** States\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Trạng thái', number: 0 })\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n      if (!isloaded) {\r\n          setLoaded(true)\r\n          dispatch(\r\n              getWardrobes({\r\n                  page: currentPage,\r\n                  perPage: rowsPerPage,\r\n                  status: currentStatus.value,\r\n                  q: searchTerm\r\n              })\r\n          )\r\n      }\r\n  }, [dispatch, store?.wardrobes?.length])\r\n\r\n  // const categoryOptions = store.categories\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n        getWardrobes({\r\n        page: page.selected + 1,\r\n        perPage: rowsPerPage,\r\n        status: currentStatus.value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n        getWardrobes({\r\n        page: currentPage,\r\n        perPage: value,\r\n        status: currentStatus.value,\r\n        q: searchTerm\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n        getWardrobes({\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        status: currentStatus.value,\r\n        q: val\r\n      })\r\n    )\r\n  }\r\n\r\n    // ** Custom Pagination\r\n  const WardrobePagination = () => {\r\n      return (\r\n          <Pagination\r\n              handlePagination={handlePagination}\r\n              currentPage={currentPage}\r\n              rowsPerPage={rowsPerPage}\r\n              store={store}\r\n          />\r\n      )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store?.wardrobes?.length > 0) {\r\n      return store?.wardrobes\r\n    } else if (store?.wardrobes?.length === 0 && isFiltered) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  if (store.wardrobes.length > 0) {\r\n      return (\r\n          <Fragment>\r\n              <AddNewButton text={'Tạo mới tủ đồ'} link={'/wardrobe/create'}/>\r\n              <Card>\r\n                  <DataTable\r\n                      noHeader\r\n                      pagination\r\n                      subHeader\r\n                      responsive\r\n                      paginationServer\r\n                      columns={columns}\r\n                      sortIcon={<ChevronDown />}\r\n                      className='react-dataTable'\r\n                      paginationComponent={WardrobePagination}\r\n                      data={dataToRender()}\r\n                      subHeaderComponent={\r\n                          <ProductHeader\r\n                              dispatch={dispatch}\r\n                              setCurrentStatus={setCurrentStatus}\r\n                              currentStatus={currentStatus}\r\n                              rowsPerPage={rowsPerPage}\r\n                              currentPage={currentPage}\r\n                              searchTerm={searchTerm}\r\n                              handleFilter={handleFilter}\r\n                          />\r\n                      }\r\n                  />\r\n              </Card>\r\n          </Fragment>\r\n      )\r\n  } else {\r\n      return (\r\n          <Fragment>\r\n              <Card className={'model d-flex align-items-center justify-content-center p-5'}>\r\n                  <div className={'text-center'}>\r\n                      <p className={'text'}>Chưa có tủ đồ nào</p>\r\n                      <img className={'w-100'} src={im_Empty} alt=\"imgWardrobeEmpty\"/>\r\n                      <div>\r\n                          <button className={'btn btn-create-new btn-primary w-50'}>Tạo tủ đồ</button>\r\n                      </div>\r\n                  </div>\r\n              </Card>\r\n          </Fragment>\r\n      )\r\n  }\r\n}\r\n\r\nexport default ProductsList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst WardrobeList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WardrobeList\r\n","import {Col, Row} from \"reactstrap\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {PlusCircle} from \"react-feather\"\r\nimport React from \"react\"\r\n\r\nconst Index = ({text, link}) => {\r\n    return (\r\n        <Row className='d-flex align-items-center justify-content-end w-100 pb-1 m-0'>\r\n            <Col md={2} className='d-flex align-items-center justify-content-end p-0'>\r\n                <Link className={'btn btn-primary white-space-nowrap'} to={link}><PlusCircle color={'white'} size={18} style={{marginRight: '10px'}}/> {text}</Link>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default Index","import React from \"react\"\r\nimport './styles/dropdown_create_at.scss'\r\nimport Select from \"react-select\"\r\nimport { selectThemeColors } from '@utils'\r\n\r\nconst dateOptions = [\r\n    {\r\n        value: 'today', label: 'Hôm nay'\r\n    },\r\n    {\r\n        value: 'yesterday', label: 'Hôm qua'\r\n    },\r\n    {\r\n        value: 'thisWeek', label: 'Tuần này'\r\n    },\r\n    {\r\n        value: 'lastWeek', label: 'Tuần trước'\r\n    },\r\n    {\r\n        value: 'thisMonth', label: 'Tháng này'\r\n    },\r\n    {\r\n        value: 'lastMonth', label: 'Tháng trước'\r\n    }\r\n]\r\n\r\nconst Index = props => {\r\n    const {handleSelectOption} = props\r\n\r\n    return (\r\n        <Select\r\n            theme={selectThemeColors}\r\n            isClearable={false}\r\n            className='react-select select-create-at pl-50'\r\n            classNamePrefix='select'\r\n            options={dateOptions}\r\n            placeholder={'Ngày tạo'}\r\n            onChange={data => {\r\n                handleSelectOption(data)\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Index","import {Label} from \"reactstrap\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport React from \"react\"\r\n\r\nconst Pagination = props => {\r\n    const {handlePagination, currentPage, rowsPerPage, store} = props\r\n    const totalItemPage = () => {\r\n        const totalRecords = store.total\r\n        if ((totalRecords - (currentPage + rowsPerPage)) < 0) {\r\n            return totalRecords\r\n        } else return currentPage * rowsPerPage\r\n    }\r\n\r\n    const indexStartItem = () => {\r\n        if (totalItemPage() - rowsPerPage + 1 < 0) {\r\n            return 1\r\n        } else return totalItemPage() - rowsPerPage + 1\r\n    }\r\n\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n        <div className='d-flex align-items-center justify-content-between ml-2'>\r\n            <div className='d-flex align-items-center w-100'>\r\n                <Label for='rows-per-page'>Hiển thị từ {indexStartItem()} - {totalItemPage()}/{store.total}</Label>\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={''}\r\n                nextLabel={''}\r\n                pageCount={count || 1}\r\n                activeClassName='active'\r\n                forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n                onPageChange={page => handlePagination(page)}\r\n                pageClassName={'page-item'}\r\n                nextLinkClassName={'page-link'}\r\n                nextClassName={'page-item next'}\r\n                previousClassName={'page-item prev'}\r\n                previousLinkClassName={'page-link'}\r\n                pageLinkClassName={'page-link'}\r\n                containerClassName={'pagination react-paginate justify-content-end my-2 pr-1'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Pagination"],"sourceRoot":""}